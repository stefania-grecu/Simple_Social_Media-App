/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package TemaTest;


import com.jogamp.common.util.Bitfield;

import java.io.*;
import java.util.ArrayList;
import java.util.Iterator;

public class App {
    static ArrayList<Utilizator> userName;
    int idOld = 0;

public App() {/* compiled code */
    if (userName == null)
        userName = new ArrayList<>();
}

    public void adaugaUser(Utilizator user) {
        userName.add(user);
    }
    public void adaugaPostare(Utilizator user, String text) {
        for (Utilizator i : userName) {
            String nume = i.getNume();
            String password = i.getPassword();
            if (nume.equals(user.getNume()) && password.equals(user.getPassword())) {
                Postare post = new Postare(text);
                i.adaugaPostare(post);
                //System.out.println("id:" + post.getId());
                return;
            }
        }
    }


    public static void main(String[] strings) {
        App app = new App();
        //-create-user
        if (strings[0].equals("-create-user")) {
            if (strings.length == 1) {
                System.out.println("{'status':'error','message':'Please provide username'}");
            } else if (strings.length == 2) {
                System.out.println("{'status':'error','message':'Please provide password'}");
            } else {
                String[] user = new String[2];
                user = strings[1].split(" ");
                String[] password = new String[2];
                password = strings[2].split(" ");

                if (!strings[1].startsWith("-u")) {
                    System.out.println("{'status':'error','message':'Please provide username'}");
                } else {
                    if (!strings[2].startsWith("-p")) {
                        System.out.println("{'status':'error','message':'Please provide password'}");
                    } else {
                        int k = 0;
                        try (BufferedReader br = new BufferedReader(new FileReader("user.csv"))) {
                            String line;
                            while ((line = br.readLine()) != null) {
                                String[] nume = new String[2];
                                nume = line.split(" ");
                                if (nume[0].equals(user[1])) {
                                    k = 1;
                                }
                            }
                        } catch (IOException e) {
                            k = 0;
                        }
                        if (k == 1) {
                            System.out.println("{'status':'error','message':'User already exists'}");
                        } else {
                            Utilizator utilizator = new Utilizator(user[1], password[1]);
                            app.adaugaUser(utilizator);

                            try (FileWriter fw = new FileWriter("user.csv", true);
                                 BufferedWriter bw = new BufferedWriter(fw);
                                 PrintWriter out = new PrintWriter(bw)) {
                                out.println(user[1] + " " + password[1]);
                            } catch (IOException ignored) {
                            }
                            System.out.println("{'status':'ok','message':'User created successfully'}");
                        }
                    }
                }
            }
        }

        //-create-post
        if (strings[0].equals("-create-post")) {
            if (strings.length == 1) {
                System.out.println("{'status':'error','message':'You need to be authenticated'}");
            } else if (strings.length == 2) {
                System.out.println("{'status':'error','message':'You need to be authenticated'}");
            } else if (!strings[1].startsWith("-u") || !strings[2].startsWith("-p")) {
                System.out.println("{'status':'error','message':'You need to be authenticated'}");
            } else {
                String[] user = new String[2];
                user = strings[1].split(" ");
                String[] password = new String[2];
                password = strings[2].split(" ");

                int k = 0;

                try (BufferedReader br = new BufferedReader(new FileReader("user.csv"))) {
                    String line;
                    while ((line = br.readLine()) != null) {
                        String[] nume = new String[2];
                        nume = line.split(" ");
                        if (nume[0].equals(user[1]) && nume[1].equals(password[1])) {
                            k = 1;
                        }
                    }
                } catch (IOException ignored) {
                }
                if (k == 0) {
                    System.out.println("{'status':'error','message':'Login failed'}");
                } else {
                    if (strings.length == 3 || !strings[3].startsWith("-text")) {
                        System.out.println("{'status':'error','message':'No text provided'}");
                    } else {
                        String[] text = new String[2];
                        text = strings[3].split("'");

                        if (text[1].length() > 300) {
                            System.out.println("{'status':'error','message':'Post text length exceeded'}");
                        } else {
                            Utilizator utilizator = new Utilizator(user[1], password[1]);
                            app.adaugaPostare(utilizator, text[1]);
                            System.out.println("{'status':'ok','message':'Post added successfully'}");
                        }
                    }
                }
            }
        }

        //delete-post-by-id
        if (strings[0].equals("-delete-post-by-id")) {
            if (strings.length == 1) {
                System.out.println("{'status':'error','message':'You need to be authenticated'}");
            } else if (strings.length == 2) {
                System.out.println("{'status':'error','message':'You need to be authenticated'}");
            } else if (!strings[1].startsWith("-u") || !strings[2].startsWith("-p")) {
                System.out.println("{'status':'error','message':'You need to be authenticated'}");
            } else {
                String[] user = new String[2];
                user = strings[1].split(" ");
                String[] password = new String[2];
                password = strings[2].split(" ");

                int k = 0;

                try (BufferedReader br = new BufferedReader(new FileReader("user.csv"))) {
                    String line;
                    while ((line = br.readLine()) != null) {
                        String[] nume = new String[2];
                        nume = line.split(" ");
                        if (nume[0].equals(user[1]) && nume[1].equals(password[1])) {
                            k = 1;
                        }
                    }
                } catch (IOException ignored) {
                }
                if (k == 0) {
                    System.out.println("{'status':'error','message':'Login failed'}");
                } else {
                    if (strings.length == 3 || !strings[3].startsWith("-id")) {
                        System.out.println("{'status':'error','message':'No identifier was provided'}");
                    } else {
                        String[] id = new String[2];
                        id = strings[3].split("'");

                        boolean ok = false;
                        //Utilizator utilizator = new Utilizator(user[1], password[1]);

                        for (Utilizator i : userName) {
                            if (user[1].equals(i.getNume())) {
                                for (Postare j : i.postare) {
                                    String x = String.valueOf(j.getId());

                                    if (x.equals(id[1])) {
                                        int index = Integer.parseInt(id[1]);
                                        i.postare.remove(index);
                                        System.out.println("{'status':'ok','message':'Post deleted successfully'}");
                                        ok = true;
                                        break;
                                    }
                                }
                            }
                        }
                        if(!ok)
                            System.out.println("{'status':'error','message':'The identifier was not valid'}");
                    }
                }
            }
        }

        //-follow-user-by-username
        if (strings[0].equals("-follow-user-by-username")) {
            if (strings.length <= 2 || !strings[1].startsWith("-u") || !strings[2].startsWith("-p"))
                System.out.println("{ 'status' : 'error', 'message' : 'You need to be authenticated'}");
            else {
                String[] user = new String[2];
                user = strings[1].split(" ");
                String[] password = new String[2];
                password = strings[2].split(" ");

                int k = 0;

                try (BufferedReader br = new BufferedReader(new FileReader("user.csv"))) {
                    String line;
                    while ((line = br.readLine()) != null) {
                        String[] nume = new String[2];
                        nume = line.split(" ");
                        if (nume[0].equals(user[1]) && nume[1].equals(password[1])) {
                            k = 1;
                        }
                    }
                } catch (IOException ignored) {
                }
                if (k == 0) {
                    System.out.println("{'status':'error','message':'Login failed'}");
                } else {
                    if (strings.length == 3 || !strings[3].startsWith("-username")) {
                        System.out.println("{'status':'error','message':'No username to follow was provided'}");
                    } else {
                        String[] userFollow = new String[3];
                        userFollow = strings[3].split(" ");
                        int ok = 0;

                        try (BufferedReader br = new BufferedReader(new FileReader("user.csv"))) {
                            String line;
                            while ((line = br.readLine()) != null) {
                                String[] nume = new String[2];
                                nume = line.split(" ");
                                if (nume[0].equals(userFollow[1])) {
                                    ok = 1;
                                }
                            }
                        } catch (IOException ignored) {
                        }

                        for (Utilizator i : userName) {
                            if (i.getNume().equals(user[1])) {
                                for (String j : i.urmareste) {
                                    if(j.equals(userFollow[1])) {
                                        ok = 0;
                                        break;
                                    }
                                }
                            }
                        }
                        if (ok == 0)
                            System.out.println("{ 'status' : 'error', 'message' : 'The username to follow was not valid'}");
                        else {
                            for (Utilizator i : userName) {
                                if (i.getNume().equals(user[1])) {
                                    i.adaugaUrmareste(userFollow[1]);
                                }
                            }
                            System.out.println("{ 'status' : 'ok', 'message' : 'Operation executed successfully'}");
                        }
                    }
                }
            }
        }

        //-cleanup-all
        if (strings[0].equals("-cleanup-all")) {
            for (Utilizator i : userName) {
                if (i.postare != null)
                    i.postare.clear();
                if (i.urmareste != null)
                    i.urmareste.clear();
            }
            if(userName != null)
                userName.clear();

            File myFile = new File("user.csv");
            myFile.delete();
        }
    }

}